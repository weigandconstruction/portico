defmodule <%= @module %>.<%= @local_module %> do
  @moduledoc """
  API for <%= @local_module %>
  """

  <%= for {path, operation} <- @path_operations do %>
    @doc """
    <%= operation.description %>

    ## Parameters

    * `client` - `Req.Request` (required) - HTTP client instance<%= if !Enum.empty?(Hydra.Helpers.all_parameters_for_docs(path, operation)) do %>
<%= Hydra.Helpers.all_parameters_for_docs(path, operation) |> Enum.map(fn param -> 
  main_param = "    * `#{param.name}` - `#{param.type}`#{if param.required, do: " (required)", else: " (optional)"}#{if param.description, do: " - #{param.description}", else: ""}"
  nested = if Map.has_key?(param, :nested_params) && param.nested_params do
    param.nested_params |> Enum.map(fn nested_param -> "      * `#{nested_param.name}` - `#{nested_param.type}`#{if nested_param.required, do: " (required)", else: " (optional)"}#{if nested_param.description, do: " - #{nested_param.description}", else: ""}" end) |> Enum.join("\n")
  else
    ""
  end
  if nested != "", do: main_param <> "\n" <> nested, else: main_param
end) |> Enum.join("\n") %>
<% end %>
    """
    <%= Hydra.Helpers.function_typespec(Hydra.Helpers.function_name_for_operation(path, operation), path, operation) %>
    def <%= Hydra.Helpers.function_name_for_operation(path, operation) %>(<%= ["client", Hydra.Helpers.required_parameters(path, operation) |> Enum.map(& &1.internal_name), if(Hydra.Helpers.has_request_body?(operation), do: ["body"], else: []), if(!Enum.empty?(Hydra.Helpers.optional_parameters(path, operation)), do: ["opts \\\\ []"], else: [])] |> List.flatten() |> Enum.join(", ") %>) do
      <%= @module %>.Client.request(client,
        method: :<%= operation.method %>,
        url: "<%= Hydra.Helpers.interpolated_path_with_params(path.path, Hydra.Helpers.function_parameters(path, operation)) %>",

        <%= if !Enum.empty?(Hydra.Helpers.header_parameters(path, operation)) do %>
          headers: [
          <%= for param <-  Hydra.Helpers.header_parameters(path, operation) do %>
            <%= if param.required do %>
            {"<%= param.name %>", <%= param.internal_name %>},
            <% else %>
            {"<%= param.name %>", Keyword.get(opts, :<%= param.internal_name %>)},
            <% end %>
          <% end %>
          ],
        <% end %>

        <%= if !Enum.empty?(Hydra.Helpers.query_parameters(path, operation)) do %>
          params: [
          <%= for param <-  Hydra.Helpers.query_parameters(path, operation) do %>
            <%= if param.required do %>
            {"<%= param.name %>", <%= param.internal_name %>},
            <% else %>
            {"<%= param.name %>", Keyword.get(opts, :<%= param.internal_name %>)},
            <% end %>
          <% end %>
          ],
        <% end %>

        <%= if Hydra.Helpers.has_request_body?(operation) do %>
          json: body,
        <% end %>
      )
    end
  <% end %>
end
